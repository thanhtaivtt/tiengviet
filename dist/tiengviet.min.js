"use strict"; function capitalize(e) { return e.replace(/\w\S*/g, function (e) { return e.charAt(0).toUpperCase() + e.substr(1).toLowerCase() }) } function convert(e, t) { return e.replace(new RegExp(t[0], "g"), t[1]).replace(new RegExp(capitalize(t[0]), "g"), capitalize(t[1])).replace(new RegExp(t[0].toUpperCase(), "g"), t[1].toUpperCase()) } function build(e) { "string" != typeof e && (e = String(e)); var t = e; return match.forEach(function (e) { t = convert(t, e) }), t } var match = [["tr", "c"], ["q", "k"], ["d", "z"], ["c(?!h)", "k"], ["gi", "z"], ["ch", "c"], ["ngh?", "q"], ["đ", "d"], ["gh", "g"], ["nh", "n'"], ["kh", "x"], ["ph", "f"], ["r", "z"], ["th", "w"]]; module.exports = build; "use strict"; function capitalize(e) { return e.replace(/\w\S*/g, function (e) { return e.charAt(0).toUpperCase() + e.substr(1).toLowerCase() }) } function convert(e, t) { return e.replace(new RegExp(t[0], "g"), t[1]).replace(new RegExp(capitalize(t[0]), "g"), capitalize(t[1])).replace(new RegExp(t[0].toUpperCase(), "g"), t[1].toUpperCase()) } function build(e) { "string" != typeof e && (e = String(e)); var t = e; return match.forEach(function (e) { t = convert(t, e) }), t } var match = [["tr", "c"], ["q", "k"], ["d", "z"], ["c(?!h)", "k"], ["gi", "z"], ["ch", "c"], ["ngh?", "q"], ["đ", "d"], ["gh", "g"], ["nh", "n'"], ["kh", "x"], ["ph", "f"], ["r", "z"], ["th", "w"]]; module.exports = build;